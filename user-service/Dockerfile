# Dockerfile for user-service
FROM eclipse-temurin:17-jdk-alpine
WORKDIR /app

# Copy Maven wrapper and pom.xml
COPY .mvn/ .mvn
COPY mvnw pom.xml ./

# Download dependencies
# This step leverages Docker layer caching if pom.xml hasn't changed
RUN ./mvnw dependency:go-offline -B

# Copy the rest of the application code
COPY src ./src

# Package the application
# -DskipTests to speed up the build; tests should be run in a CI pipeline
RUN ./mvnw package -DskipTests

# Set the entrypoint to run the application
# The JAR file name should match the one generated by the build (artifactId-version.jar)
ENTRYPOINT ["java","-jar","target/user-service-0.0.1-SNAPSHOT.jar"]

# Expose the port the application runs on (defined in application.yml or by Config Server)
# This doesn't actually publish the port, `docker run -p` does that.
EXPOSE 8081
